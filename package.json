{
    "name": "fs-lexicon",
    "version": "1.1.0",
    "description": "A Fullstory middleware intended to receive, transform and route behavioural activation instructions.",
    "type": "module",
    "main": "index.js",
    "scripts": {
        "start": "node index.js",
        "start:mcp": "node MCP/mcp-main.js",
        "mcp": "node MCP/mcp-main.js",
        "build:cloudrun": "docker build -f MCP/Dockerfile.mcp -t lexicon-mcp .",
        "docker:mcp:gcp": "gcloud builds submit --config MCP/cloudbuild.yaml .",
        
        "# Example Test/Development Deployment Scripts": "",
        "# NOTE: Replace PROJECT_ID and SERVICE_ACCOUNT with your values": "",
        "deploy:mcp:example": "npm run docker:mcp:gcp && npm run cloudrun:mcp:example",
        "cloudrun:mcp:example": "gcloud run deploy lexicon-mcp-dev --image YOUR_REGION-docker.pkg.dev/YOUR_PROJECT_ID/YOUR_REPOSITORY/lexicon-mcp:latest --platform managed --service-account YOUR_SERVICE_ACCOUNT@YOUR_PROJECT_ID.iam.gserviceaccount.com --region YOUR_REGION --port 8080 --no-allow-unauthenticated --min-instances=1 --max-instances=5 --cpu=1 --memory=512Mi --update-secrets=API_KEY=your-api-key:latest,DATABASE_URL=your-database-url:latest --set-env-vars='NODE_ENV=development,MCP_MODE=true,SAFE_MODE=true'",


        
        "# Utility Scripts": "",
        "test": "node --experimental-vm-modules node_modules/jest/bin/jest.js --config ./tests/jest.config.js",
        "test:ci": "node --experimental-vm-modules node_modules/jest/bin/jest.js --config ./tests/jest.config.js --ci --coverage",
        "test:watch": "node --experimental-vm-modules node_modules/jest/bin/jest.js --config ./tests/jest.config.js --watch",
        "test:coverage": "node --experimental-vm-modules node_modules/jest/bin/jest.js --config ./tests/jest.config.js --coverage",
        "test:unit": "node --experimental-vm-modules node_modules/jest/bin/jest.js --config ./tests/jest.config.js --testPathPattern=tests/unit",
        "test:integration": "node --experimental-vm-modules node_modules/jest/bin/jest.js --config ./tests/jest.config.js --testPathPattern=tests/integration",
        "test:clean": "rm -rf ./coverage",
        "test:update-snapshots": "jest --config ./tests/jest.config.js --updateSnapshot",
        "test:webhook": "jest --config ./tests/jest.config.js --testPathPattern=tests/unit/webhookRouter.test.js",
        "test:webhook:base": "jest --config ./tests/jest.config.js --testPathPattern=tests/unit/webhookBase.test.js",
        "test:connector:base": "jest --config ./tests/jest.config.js --testPathPattern=tests/unit/connectorBase.test.js",
        "test:webhook:integration": "jest --config ./tests/jest.config.js --testPathPattern=tests/integration/webhook.integration.test.js",
        "test:changed": "jest --config ./tests/jest.config.js --onlyChanged",
        "test:verbose": "jest --config ./tests/jest.config.js --verbose",
        "verify": "node ./scripts/verify-installation.js",
        "docker:build": "docker build -t lexicon:$(node -p \"require('./package.json').version\") -t lexicon:latest --build-arg VERSION=$(node -p \"require('./package.json').version\") .",
        "docker:build:dev": "docker build -t lexicon:dev-$(node -p \"require('./package.json').version\") -t lexicon:dev --build-arg VERSION=$(node -p \"require('./package.json').version\") --build-arg NODE_ENV=development --build-arg SKIP_TESTS=true --build-arg K_SERVICE=local-dev --target builder .",
        "docker:run": "docker run -p 8080:8080 -e NODE_ENV=production lexicon:${TAG:-$(node -p \"require('./package.json').version\")}",
        "docker:run:env": "docker run -p 8080:8080 --env-file .env lexicon:${TAG:-$(node -p \"require('./package.json').version\")}",
        "docker:run:gcp": "docker run -p 8080:8080 --env-file .env -e CLOUD_PROVIDER=GCP -e K_SERVICE=local-gcp lexicon:${TAG:-$(node -p \"require('./package.json').version\")}",
        "docker:run:azure": "docker run -p 8080:8080 --env-file .env -e CLOUD_PROVIDER=AZURE -e WEBSITE_SITE_NAME=local-azure lexicon:${TAG:-$(node -p \"require('./package.json').version\")}",
        "docker:run:aws": "docker run -p 8080:8080 --env-file .env -e CLOUD_PROVIDER=AWS -e AWS_EXECUTION_ENV=local-aws lexicon:${TAG:-$(node -p \"require('./package.json').version\")}",
        "docker:stop": "docker ps -q --filter ancestor=lexicon:dev | xargs -r docker stop",
        "docker:stop:all": "docker ps -q --filter name=lexicon | xargs -r docker stop",
        "docker:ps": "docker ps",
        "docker:kill:port": "docker ps -q --filter publish=8080 | xargs -r docker stop",
        "dev:gcf": "NODE_ENV=development npx @google-cloud/functions-framework --target=lexicon",
        "dev:gcf:no-verify": "NODE_ENV=development SKIP_WEBHOOK_VERIFICATION=true npx @google-cloud/functions-framework --target=lexicon",
        "dev:docker": "npm run docker:build:dev && npm run docker:run:env",
        "dev:mount": "docker run --name lexicon-dev -p 8080:8080 --env-file .env -e K_SERVICE=local-dev -v ${PWD}:/usr/src/app -v /usr/src/app/node_modules lexicon:dev",
        "dev:clean": "docker build -t lexicon:dev-$(node -p \"require('./package.json').version\") -t lexicon:dev --build-arg VERSION=$(node -p \"require('./package.json').version\") --build-arg NODE_ENV=development --build-arg SKIP_TESTS=true --build-arg K_SERVICE=local-dev --no-cache --target builder . && npm run docker:run:env"
    },
    "dependencies": {
        "@azure/functions": "^3.5.0",
        "@google-cloud/bigquery": "^7.9.3",
        "@google-cloud/functions-framework": "^3.1.0",
        "@modelcontextprotocol/sdk": "1.13.3",
        "compression": "^1.8.0",
        "date-fns": "^2.30.0",
        "dotenv": "^16.0.3",
        "express": "^5.0.0",
        "express-rate-limit": "^7.0.0",
        "googleapis": "^144.0.0",
        "helmet": "^7.2.0",
        "node-fetch": "^2.6.9",
        "snowflake-sdk": "^2.0.3",
        "zod": "^3.25.67"
    },
    "devDependencies": {
        "babel-jest": "^29.5.0",
        "cross-env": "^7.0.3",
        "jest": "^29.5.0",
        "jest-junit": "^16.0.0",
        "jest-sonar-reporter": "^2.0.0",
        "supertest": "^6.3.3"
    },
    "engines": {
        "node": ">=20"
    },
    "author": "lexicon-contributors",
    "license": "MIT"
}
